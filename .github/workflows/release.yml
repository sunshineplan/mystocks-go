name: Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Test Code
        run: |
          go mod download
          go build ./...

      - name: Delete Old Release
        uses: actions/github-script@v3
        with:
          script: |
            let release
            try {
              release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: 'v1.0'
              })
            } catch(e) {
              console.error(e)
              return
            }

            await github.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id
            })

            await github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/v1.0'
            })

      - name: Get Current Date
        uses: actions/github-script@v3
        id: date
        with:
          script: |
            core.setOutput("date", new Date(new Date().getTime()+(8*3600*1000)).toISOString().split('T')[0])

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0
          release_name: ${{ steps.date.outputs.date }}
          body: ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
